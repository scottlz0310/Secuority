# GitHub Actions workflow for CI/CD pipeline
# Generated by Secuority - Python security and quality automation tool

name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13", "3.14"]

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          if [ -f "pyproject.toml" ]; then
            # Use uv sync to install all dependencies
            uv sync --all-extras || uv sync
          elif [ -f "requirements.txt" ]; then
            uv venv
            source .venv/bin/activate
            uv pip install -r requirements.txt
            uv pip install pytest pytest-cov
          fi

      - name: Run tests
        run: |
          # Detect package name from pyproject.toml
          if [ -f "pyproject.toml" ]; then
            PACKAGE_NAME=$(uv run python -c "import tomllib; f=open('pyproject.toml','rb'); data=tomllib.load(f); name=data.get('project',{}).get('name',''); print(name.replace('-','_') if name else 'src')" 2>/dev/null || echo "src")
            # Run tests with detected package
            if [ -d "tests" ]; then
              uv run pytest tests/ --cov="secuority" --cov-report=xml --cov-report=term-missing
            else
              uv run pytest --cov="secuority" --cov-report=xml --cov-report=term-missing
            fi
          else
            # Fallback for projects without pyproject.toml
            if [ -d "tests" ]; then
              uv run pytest tests/ --cov-report=xml --cov-report=term-missing
            else
              uv run pytest --cov-report=xml --cov-report=term-missing
            fi
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
