# GitHub Actions workflow for code quality checks
# Generated by Secuority - Python security and quality automation tool

name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write

jobs:
  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          # Install project dependencies
          if [ -f "pyproject.toml" ]; then
            # Check if dependency-groups are defined
            if uv run python -c "import tomllib; f=open('pyproject.toml','rb'); data=tomllib.load(f); exit(0 if 'dependency-groups' in data else 1)" 2>/dev/null; then
              uv sync --group dev --group test --group lint
            else
              # Fallback to extras if dependency-groups not found
              uv sync --extra dev --extra test
            fi
          elif [ -f "requirements.txt" ]; then
            uv pip install -r requirements.txt
            # Install common development tools
            uv pip install ruff mypy pytest pytest-cov
          else
            # Install basic tools for projects without dependency files
            uv pip install ruff mypy pytest pytest-cov
          fi

      - name: Lint with Ruff
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          uv run ruff check . --output-format=github --select=E9,F63,F7,F82 --show-source
          # Default set of ruff rules with GitHub Actions annotations
          uv run ruff check . --output-format=github

      - name: Format check with Ruff
        run: |
          uv run ruff format --check .

      - name: Type check with MyPy
        run: |
          uv run mypy . --show-error-codes --show-error-context

      - name: Test with pytest
        run: |
          uv run pytest --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install pre-commit
        run: |
          uv pip install pre-commit

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit hooks
        run: |
          uv run pre-commit run --all-files

  docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install documentation dependencies
        run: |
          if [ -f "pyproject.toml" ]; then
            # Check if dependency-groups are defined
            if uv run python -c "import tomllib; f=open('pyproject.toml','rb'); data=tomllib.load(f); exit(0 if 'dependency-groups' in data and 'docs' in data['dependency-groups'] else 1)" 2>/dev/null; then
              uv sync --group docs
            else
              # Fallback to basic sphinx installation
              uv pip install sphinx sphinx-rtd-theme
            fi
          else
            uv pip install sphinx sphinx-rtd-theme
          fi

      - name: Build documentation
        run: |
          if [ -d "docs" ]; then
            cd docs
            uv run make html
          fi

      - name: Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
          publish_dir: ./docs/_build/html

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, GPL-3.0
