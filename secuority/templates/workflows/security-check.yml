# GitHub Actions workflow for security checks
# Generated by Secuority - Python security and quality automation tool

name: Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety gitleaks

    - name: Run Bandit security linter
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt

    - name: Run Safety dependency vulnerability scanner
      run: |
        safety check --json --output safety-report.json || true
        safety check

    - name: Run Gitleaks secret scanner
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports-${{ matrix.python-version }}
        path: |
          bandit-report.json
          safety-report.json

    - name: Comment PR with security results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          let comment = '## Security Scan Results\n\n';
          
          try {
            const banditReport = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
            comment += `### Bandit Security Linter\n`;
            comment += `- **High severity issues**: ${banditReport.metrics._totals.SEVERITY.HIGH || 0}\n`;
            comment += `- **Medium severity issues**: ${banditReport.metrics._totals.SEVERITY.MEDIUM || 0}\n`;
            comment += `- **Low severity issues**: ${banditReport.metrics._totals.SEVERITY.LOW || 0}\n\n`;
          } catch (e) {
            comment += '### Bandit Security Linter\nReport not available\n\n';
          }
          
          try {
            const safetyReport = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
            comment += `### Safety Dependency Scanner\n`;
            comment += `- **Vulnerabilities found**: ${safetyReport.vulnerabilities?.length || 0}\n\n`;
          } catch (e) {
            comment += '### Safety Dependency Scanner\nReport not available\n\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate