# Pre-commit configuration template for Python projects
# Generated by Secuority - Python security and quality automation tool

repos:
  # Ruff for linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: ['--pytest-test-first']
      - id: check-ast
      - id: check-builtin-literals
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Security scanning with gitleaks
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.21.2
    hooks:
      - id: gitleaks

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-pyyaml, types-toml]
        args: [--ignore-missing-imports, --strict]

  # Security linting with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: ^tests/

  # Dependency vulnerability scanning with safety (adapted for uv)
  - repo: local
    hooks:
      - id: safety-uv
        name: Safety vulnerability check (uv compatible)
        entry: bash -c 'uv export --no-hashes | uv run safety check --stdin --ignore=70612'
        language: system
        pass_filenames: false
        files: pyproject\.toml$

  # Check for common security issues
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
              .*\.lock$|
              .*\.log$|
              \.git/.*|
              \.mypy_cache/.*|
              \.pytest_cache/.*|
              \.ruff_cache/.*|
              __pycache__/.*
          )

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  # Upgrade Python syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.0
    hooks:
      - id: pyupgrade
        args: [--py313-plus]

  # Check for Python 2/3 compatibility issues
  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.1.0
    hooks:
      - id: add-trailing-comma
        args: [--py36-plus]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [yaml]
        exclude: |
          (?x)^(
              \.github/workflows/.*\.ya?ml$|
              \.pre-commit-config\.yaml$
          )

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

# Configuration for specific hooks
default_language_version:
  python: python3.13

# Global excludes
exclude: |
  (?x)^(
      \.git/|
      \.mypy_cache/|
      \.pytest_cache/|
      \.ruff_cache/|
      \.uv_cache/|
      __pycache__/|
      build/|
      dist/|
      \.egg-info/|
      node_modules/|
      \.venv/|
      venv/|
      ENV/|
      env/
  )

# Fail fast - stop on first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: '3.0.0'

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
